---
const { title = 'Chen Yang — Academic Homepage', description = 'Research, publications, projects, and contact' } = Astro.props;
---

<html lang="en" class="scroll-smooth">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link rel="icon" href="/favicon.svg" />
    <meta name="description" content={description} />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>

    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link rel="preconnect" href="https://github.com" />
    <link rel="dns-prefetch" href="https://github.com" />
    <link rel="preconnect" href="https://scholar.google.com" />
    <link rel="dns-prefetch" href="https://scholar.google.com" />
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&family=Noto+Sans+SC:wght@400;500;700&display=swap" rel="stylesheet" />
    <link href="https://fonts.googleapis.com/css2?family=Noto+Serif+TC:wght@500;600;700&display=swap" rel="stylesheet" />
    <!-- LXGW WenKai webfont for Chinese Kaishu style -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/lxgw-wenkai-webfont@1.7.0/style.css" />
    <meta name="color-scheme" content="light" />
    <link rel="preload" href="/cv.pdf" as="document" crossorigin>
    <!-- Global CSS is now included via Tailwind -->
    <style is:global>
      :root { --brand: 56 189 248; }
      html { font-family: Inter, "Noto Sans SC", system-ui, -apple-system, Segoe UI, Roboto, "Helvetica Neue", Arial, "Noto Sans", "Apple Color Emoji", "Segoe UI Emoji"; }
    </style>
  </head>
  <body class="min-h-dvh" style="background-color: #ffffff; color: #0f172a;">
    <header class="sticky top-0 z-40 backdrop-blur supports-[backdrop-filter]:bg-white/70 border-b" style="background-color: #ffffff; border-color: #e2e8f0;">
      <nav class="mx-auto max-w-6xl px-5 h-16 flex items-center justify-between">
        <a href="/" class="font-semibold tracking-tight text-lg md:text-xl">Chen Yang</a>
        <div></div>
      </nav>
    </header>

    <main class="mx-auto max-w-6xl px-5 py-14">
      <slot />
    </main>

    <!-- Clustrmaps Globe -->
    <div class="border-t border-slate-200/60 py-10">
      <div class="mx-auto max-w-6xl px-5">
        <div class="flex justify-center">
          <script type="text/javascript" id="clstr_globe" src="//clustrmaps.com/globe.js?d=pV71LnC71IrfEBQZBzoLe3YrtnJhQ5qtWT6to28Cu4o&w=300&h=300"></script>
        </div>
      </div>
    </div>

    <footer class="border-t border-slate-200/60 py-10">
      <div class="mx-auto max-w-6xl px-5 text-sm text-slate-500">
        © {new Date().getFullYear()} Chen Yang. All rights reserved.
      </div>
    </footer>

    <script is:inline>
        // Project filtering functionality
        const filterButtons = document.querySelectorAll('.filter-btn');
        const projectCards = document.querySelectorAll('.project-card');

        filterButtons.forEach(button => {
          button.addEventListener('click', function() {
            const filter = this.getAttribute('data-filter');

            // Update button states
            filterButtons.forEach(btn => {
              btn.classList.remove('bg-blue-600', 'text-white', 'active');
              btn.classList.add('bg-gray-200', 'text-gray-700');
            });
            this.classList.remove('bg-gray-200', 'text-gray-700');
            this.classList.add('bg-blue-600', 'text-white', 'active');

            // Filter projects
            projectCards.forEach(card => {
              const categories = card.getAttribute('data-category').split(' ');
              if (filter === 'all' || categories.includes(filter)) {
                card.style.display = 'block';
              } else {
                card.style.display = 'none';
              }
            });
          });
        });

        // Background section tab functionality
        const tabButtons = document.querySelectorAll('.tab-btn');
        const tabContents = document.querySelectorAll('.tab-content');

        tabButtons.forEach(button => {
          button.addEventListener('click', function() {
            const tabName = this.getAttribute('data-tab');

            // Update tab button states
            tabButtons.forEach(btn => {
              btn.classList.remove('text-blue-600', 'border-blue-600', 'active');
              btn.classList.add('text-gray-600', 'border-transparent');
            });
            this.classList.remove('text-gray-600', 'border-transparent');
            this.classList.add('text-blue-600', 'border-blue-600', 'active');

            // Show corresponding content
            tabContents.forEach(content => {
              if (content.id === `tab-${tabName}`) {
                content.style.display = 'block';
              } else {
                content.style.display = 'none';
              }
            });
          });
        });
    </script>
  </body>
</html> 